# Resources and recipes:
# * <https://docs.github.com/en/actions>
# * <https://packaging.python.org/en/latest/guides/publishing-package-distribution-releases-using-github-actions-ci-cd-workflows/>
# * <https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python>
# * <https://github.com/hynek/build-and-inspect-python-package>
# * <https://docs.github.com/en/actions/sharing-automations/avoiding-duplication>

name: ci

permissions: {} # No default permissions.

on:
  push:
    branches:
      - "**" # All branches
    tags:
      - v[0-9]+.[0-9]+.[0-9]+ # Release tags, e.g. v0.1.2
  pull_request:
    branches:
      - master
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  FORCE_COLOR: "1" # Make tools pretty.

jobs:
  build:
    name: Build and verify package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Build and inspect Python package
        uses: hynek/build-and-inspect-python-package@v2
        id: baipp

  test:
    name: Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Setup uv
        uses: astral-sh/setup-uv@v6

      - name: Test package
        run: uvx nox

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true

  publish-to-testpypi:
    name: Publish to TestPyPI
    needs: test
    # Publish on TestPyPI on pushes to the master branch and on release tags.
    if: (github.ref == 'refs/heads/master') || startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/${{ github.event.repository.name }}
    permissions:
      id-token: write # Mandatory for trusted publishing.

    steps:
      - name: Download the dists
        uses: actions/download-artifact@v5
        with:
          name: Packages
          path: dist/

      - name: Publish to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  publish-to-pypi:
    name: Publish to PyPI
    needs: test
    # Publish to PyPI on release tags.
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ github.event.repository.name }}
    permissions:
      id-token: write

    steps:
      - name: Download the dists
        uses: actions/download-artifact@v5
        with:
          name: Packages
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-release:
    name: GitHub release
    needs: publish-to-pypi
    runs-on: ubuntu-latest
    permissions:
      contents: write # Mandatory for GitHub releases.

    steps:
      - name: Download the dists
        uses: actions/download-artifact@v5
        with:
          name: Packages
          path: dist/

      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes '[Changelog](https://github.com/angelo-peronio/gsffile/blob/${{ github.ref_name }}/CHANGELOG.md)'

      - name: Upload artifacts to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
