[project]
name = "gsffile"
description = "Read and write Gwyddion Simple Field files"
authors = [{ name = "Carlo Dri" }, { name = "Angelo Peronio" }]
keywords = ["Gwyddion", "Gwyddion Simple Field", "gsf"]
dynamic = ["version"]
readme = "README.md"
# Support the next beta Python version as soon has NumPy publishes binary wheels for it,
# otherwise the CI would take too long.
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python :: 3",
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Typing :: Typed",
]
# Scientific Python reccomendation on Python and NumPy versions to support.
# <https://scientific-python.org/specs/spec-0000/>
# Upgrade the pyupgrade configuration in .pre-commit.config.yaml accordingly.
requires-python = ">= 3.10"
dependencies = ["numpy >= 1.24"]
optional-dependencies.dev = [
    "build",
    "mypy",
    "pre-commit",
    "ruff",
    "twine",
    "gsffile[test]",
]
optional-dependencies.test = ["pytest", "pytest-cov"]

[project.urls]
"Source code" = "https://github.com/angelo-peronio/gsffile"
Issues = "https://github.com/angelo-peronio/gsffile/issues"
"GSF format" = "http://gwyddion.net/documentation/user-guide-en/gsf.html"

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch]
build.targets.sdist.only-packages = true
version.source = "vcs"

[tool.hatch.version.raw-options]
# Version tag pattern: v[major].[minor].[patch]
# https://setuptools-scm.readthedocs.io/en/latest/config/#setuptools_scm._config.DEFAULT_TAG_REGEX
# Single quote --> literal string, https://toml.io/en/v1.0.0#string
tag_regex = '^(?P<version>v?\d+\.\d+\.\d+)$'
# To be able to publish dev versions to TestPyPI.
# https://github.com/ofek/hatch-vcs/discussions/12
local_scheme = "no-local-version"

[tool.pytest.ini_options]
addopts = [
    "-ra",
    "--cov=gsffile",
    "--import-mode=importlib",
    "--strict-config",
    "--strict-markers",
]
filterwarnings = ["error"]
log_cli_level = "INFO"
minversion = "7"
xfail_strict = true
testpaths = ["tests"]

[tool.ruff.lint]
extend-select = ["ALL"]
ignore = [
    "COM812", # Trailing comma missing
]
extend-per-file-ignores."tests/*.py" = [
    "ANN",  # Type annotations
    "S101", # Assert used
]
pydocstyle.convention = "numpy"

[tool.mypy]
files = ["src"]
strict = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
